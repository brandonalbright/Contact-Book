{"ast":null,"code":"var _jsxFileName = \"/Users/brandonalbright/Desktop/Contact-Book/src/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ContactModal from \"./components/MODAL\";\nimport Contacts from \"./components/CONTACTS\";\nimport fetchAPI from \"./api/index\";\nimport \"./index.css\";\n\nfunction App() {\n  const [contactList, setContactList] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [contactType, setContactType] = useState('');\n  const [edit, setEdit] = useState(null);\n  const [commentList, setCommentList] = useState([]);\n  useEffect(() => {\n    fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\").then(function (data) {\n      setContactList(data.contacts);\n      setCommentList(data.comments);\n      console.log(data);\n    }).catch(function (error) {\n      console.error('error fetching contacts', error);\n    });\n  }, []); // function addCommentArray() {\n  //     contactList.forEach((contact) => {\n  //         contact.comments = []\n  //     } \n  //     )\n  // }\n  // addCommentArray()\n\n  function addNewContact(newContact) {\n    return setContactList([newContact, ...contactList]);\n  }\n\n  function updateContact(updatedContact) {\n    let index = contactList.findIndex(contact => {\n      return contact.id === edit;\n    });\n\n    if (index > -1) {\n      let contactListCopy = [...contactList];\n      contactListCopy[index] = updatedContact;\n      setContactList(contactListCopy);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"My Contacts\"), /*#__PURE__*/React.createElement(ContactModal, {\n    addNewContact: addNewContact,\n    open: open,\n    setOpen: setOpen,\n    name: name,\n    address: address,\n    phoneNumber: phoneNumber,\n    email: email,\n    contactType: contactType,\n    setName: setName,\n    setAddress: setAddress,\n    setPhoneNumber: setPhoneNumber,\n    setEmail: setEmail,\n    setContactType: setContactType,\n    edit: edit,\n    setEdit: setEdit,\n    updateContact: updateContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Contacts, {\n    contactList: contactList,\n    setContactList: setContactList,\n    setOpen: setOpen,\n    setName: setName,\n    setAddress: setAddress,\n    setPhoneNumber: setPhoneNumber,\n    setEmail: setEmail,\n    setContactType: setContactType,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }\n}), document.getElementById(`app`));","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/index.js"],"names":["React","useEffect","useState","ReactDOM","ContactModal","Contacts","fetchAPI","App","contactList","setContactList","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","edit","setEdit","commentList","setCommentList","then","data","contacts","comments","console","log","catch","error","addNewContact","newContact","updateContact","updatedContact","index","findIndex","contact","id","contactListCopy","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from  \"react\";\nimport ReactDOM from \"react-dom\";\nimport ContactModal from \"./components/MODAL\"\nimport Contacts from \"./components/CONTACTS\"\nimport fetchAPI from \"./api/index\"\nimport \"./index.css\"\n\n\n\n\nfunction App() {\n    const [contactList, setContactList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactType, setContactType] = useState('');\n    const [edit, setEdit]= useState(null)\n    const [commentList, setCommentList] =useState([])\n    \n    useEffect(() => {\n        fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\")\n        .then(function (data) {\n            setContactList(data.contacts);\n            setCommentList(data.comments)\n            console.log(data)\n        })\n        .catch(function (error) {\n            console.error('error fetching contacts', error);\n        })\n    }, [])\n    \n    // function addCommentArray() {\n    //     contactList.forEach((contact) => {\n    //         contact.comments = []\n    //     } \n    //     )\n    // }\n    // addCommentArray()\n\n\n    function addNewContact(newContact) {\n        return setContactList([newContact, ...contactList ])\n      }\n\n    function updateContact(updatedContact) {\n        let index = contactList.findIndex((contact) => {\n            return contact.id === edit\n        })\n        \n        if (index > -1) {\n            let contactListCopy = [...contactList]\n            contactListCopy[index] = updatedContact\n            setContactList(contactListCopy)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"title\">\n                <h1>My Contacts</h1>\n                <ContactModal \n                    addNewContact={addNewContact}\n                    open={open}\n                    setOpen={setOpen}\n                    name={name}\n                    address={address}\n                    phoneNumber={phoneNumber}\n                    email={email}\n                    contactType={contactType}\n                    setName={setName}\n                    setAddress={setAddress}\n                    setPhoneNumber={setPhoneNumber}\n                    setEmail={setEmail}\n                    setContactType={setContactType}\n                    edit={edit}\n                    setEdit={setEdit}\n                    updateContact={updateContact}\n                    />\n            </div>\n            <Contacts \n                contactList={contactList}\n                setContactList={setContactList}\n                setOpen={setOpen}\n                setName={setName}\n                setAddress={setAddress}\n                setPhoneNumber={setPhoneNumber}\n                setEmail={setEmail}\n                setContactType={setContactType}\n                setEdit={setEdit}\n                />\n        </>\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(`app`)\n);\n"]},"metadata":{},"sourceType":"module"}