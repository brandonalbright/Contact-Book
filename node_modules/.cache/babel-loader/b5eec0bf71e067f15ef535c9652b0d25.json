{"ast":null,"code":"import _regeneratorRuntime from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";function fetchAPI(_x){return _fetchAPI.apply(this,arguments);}function _fetchAPI(){_fetchAPI=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var method,sendData,fetchOptions,response,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method=_args.length>1&&_args[1]!==undefined?_args[1]:\"GET\";sendData=_args.length>2&&_args[2]!==undefined?_args[2]:null;fetchOptions={method:method,headers:{'Content-Type':'application/json','Authorization':'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImJyYW5kb24iLCJpYXQiOjE2MDU1NzQwOTIsImV4cCI6MTYwNjE3ODg5Mn0.HJQ-TnkS1pKhJ-h9oFGShA20oN322SouFjJHvCfY7PI'}};if(sendData){fetchOptions.body=JSON.stringify(sendData);}_context.next=6;return fetch(url,fetchOptions);case 6:response=_context.sent;_context.next=9;return response.json();case 9:data=_context.sent;return _context.abrupt(\"return\",data);case 11:case\"end\":return _context.stop();}}},_callee);}));return _fetchAPI.apply(this,arguments);}export default fetchAPI;","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/api/index.js"],"names":["fetchAPI","url","method","sendData","fetchOptions","headers","body","JSON","stringify","fetch","response","json","data"],"mappings":"yUAAeA,CAAAA,Q,oIAAf,iBAAwBC,GAAxB,iLAA6BC,MAA7B,+CAAoC,KAApC,CAA2CC,QAA3C,+CAAoD,IAApD,CACUC,YADV,CACyB,CACnBF,MAAM,CAAEA,MADW,CAEnBG,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,gBAAiB,qKAFV,CAFU,CADzB,CASI,GAAIF,QAAJ,CAAc,CACZC,YAAY,CAACE,IAAb,CAAoBC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAApB,CACD,CAXL,sBAa2BM,CAAAA,KAAK,CAACR,GAAD,CAAMG,YAAN,CAbhC,QAaUM,QAbV,qCAcuBA,CAAAA,QAAQ,CAACC,IAAT,EAdvB,QAcUC,IAdV,+CAgBWA,IAhBX,yD,2CAmBA,cAAeZ,CAAAA,QAAf","sourcesContent":["async function fetchAPI(url, method=\"GET\", sendData=null) {\n    const fetchOptions = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImJyYW5kb24iLCJpYXQiOjE2MDU1NzQwOTIsImV4cCI6MTYwNjE3ODg5Mn0.HJQ-TnkS1pKhJ-h9oFGShA20oN322SouFjJHvCfY7PI'\n      }\n    };\n  \n    if (sendData) {\n      fetchOptions.body = JSON.stringify(sendData);\n    }\n  \n    const response = await fetch(url, fetchOptions);\n    const data = await response.json();\n  \n    return data;\n  }\n\nexport default fetchAPI"]},"metadata":{},"sourceType":"module"}