{"ast":null,"code":"import _toConsumableArray from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import ReactDOM from\"react-dom\";import ContactModal from\"./components/MODAL\";import Contacts from\"./components/CONTACTS\";import fetchAPI from\"./api/index\";import\"./index.css\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contactList=_useState2[0],setContactList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),address=_useState8[0],setAddress=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),phoneNumber=_useState10[0],setPhoneNumber=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),email=_useState12[0],setEmail=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),contactType=_useState14[0],setContactType=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),edit=_useState16[0],setEdit=_useState16[1];useEffect(function(){fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\").then(function(data){var sortedArray=data.contacts.sort(function(a,b){if(a.name<b.name)return-1;else if(a.name>b.name)return 1;return 0;});setContactList(sortedArray);}).catch(function(error){console.error('error fetching contacts',error);});},[]);function addNewContact(newContact){return setContactList([].concat(_toConsumableArray(contactList),[newContact]));}function updateContact(updatedContact){var index=contactList.findIndex(function(contact){return contact.id===edit;});if(index>-1){var contactListCopy=_toConsumableArray(contactList);contactListCopy[index]=updatedContact;setContactList(contactListCopy);}}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},/*#__PURE__*/React.createElement(\"h1\",null,\"My Contacts\"),/*#__PURE__*/React.createElement(ContactModal,{addNewContact:addNewContact,open:open,setOpen:setOpen,name:name,address:address,phoneNumber:phoneNumber,email:email,contactType:contactType,setName:setName,setAddress:setAddress,setPhoneNumber:setPhoneNumber,setEmail:setEmail,setContactType:setContactType,edit:edit,setEdit:setEdit,updateContact:updateContact})),/*#__PURE__*/React.createElement(Contacts,{contactList:contactList,setContactList:setContactList,setOpen:setOpen,setName:setName,setAddress:setAddress,setPhoneNumber:setPhoneNumber,setEmail:setEmail,setContactType:setContactType,setEdit:setEdit}));}ReactDOM.render(/*#__PURE__*/React.createElement(App,null),document.getElementById(\"app\"));","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/index.js"],"names":["React","useEffect","useState","ReactDOM","ContactModal","Contacts","fetchAPI","App","contactList","setContactList","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","edit","setEdit","then","data","sortedArray","contacts","sort","a","b","catch","error","console","addNewContact","newContact","updateContact","updatedContact","index","findIndex","contact","id","contactListCopy","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from  \"react\";\nimport ReactDOM from \"react-dom\";\nimport ContactModal from \"./components/MODAL\"\nimport Contacts from \"./components/CONTACTS\"\nimport fetchAPI from \"./api/index\"\nimport \"./index.css\"\n\n\n\n\nfunction App() {\n    const [contactList, setContactList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactType, setContactType] = useState('');\n    const [edit, setEdit]= useState(null)\n    \n    \n    useEffect(() => {\n        fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\")\n        .then(function (data) {\n            const sortedArray = data.contacts.sort(function (a, b) {\n                if (a.name < b.name) return -1;\n                else if (a.name > b.name) return 1;\n                return 0;\n              });\n            setContactList(sortedArray);\n            \n        })\n        .catch(function (error) {\n            console.error('error fetching contacts', error);\n        })\n    }, [])\n    \n\n\n\n\n    function addNewContact(newContact) {\n        return setContactList([...contactList, newContact ])\n      }\n\n    function updateContact(updatedContact) {\n        let index = contactList.findIndex((contact) => {\n            return contact.id === edit\n        })\n        \n        if (index > -1) {\n            let contactListCopy = [...contactList]\n            contactListCopy[index] = updatedContact\n            setContactList(contactListCopy)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"title\">\n                <h1>My Contacts</h1>\n                <ContactModal \n                    addNewContact={addNewContact}\n                    open={open}\n                    setOpen={setOpen}\n                    name={name}\n                    address={address}\n                    phoneNumber={phoneNumber}\n                    email={email}\n                    contactType={contactType}\n                    setName={setName}\n                    setAddress={setAddress}\n                    setPhoneNumber={setPhoneNumber}\n                    setEmail={setEmail}\n                    setContactType={setContactType}\n                    edit={edit}\n                    setEdit={setEdit}\n                    updateContact={updateContact}\n                    />\n            </div>\n            <Contacts \n                contactList={contactList}\n                setContactList={setContactList}\n                setOpen={setOpen}\n                setName={setName}\n                setAddress={setAddress}\n                setPhoneNumber={setPhoneNumber}\n                setEmail={setEmail}\n                setContactType={setContactType}\n                setEdit={setEdit}\n                />\n        </>\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(`app`)\n);\n"]},"metadata":{},"sourceType":"module"}