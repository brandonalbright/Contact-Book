{"ast":null,"code":"import _regeneratorRuntime from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import Modal from'@material-ui/core/Modal';import Input from'@material-ui/core/Input';import MaskedInput from'react-text-mask';import fetchAPI from'../api/index';import Radio from'@material-ui/core/Radio';import RadioGroup from'@material-ui/core/RadioGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import AddIcon from'@material-ui/icons/Add';import'./MODAL.css';function getModalStyle(){return{top:\"50%\",left:\"50%\",transform:\"translate(-50%, -50%)\"};}var useStyles=makeStyles(function(theme){return{paper:{position:'absolute',backgroundColor:theme.palette.background.paper,border:'2px solid #000',boxShadow:theme.shadows[5],padding:theme.spacing(2,4,3)}};});export default function ContactModal(props){var classes=useStyles();var _useState=useState(getModalStyle),_useState2=_slicedToArray(_useState,1),modalStyle=_useState2[0];var addNewContact=props.addNewContact,open=props.open,setOpen=props.setOpen,name=props.name,setName=props.setName,address=props.address,setAddress=props.setAddress,phoneNumber=props.phoneNumber,setPhoneNumber=props.setPhoneNumber,email=props.email,setEmail=props.setEmail,contactType=props.contactType,setContactType=props.setContactType,edit=props.edit,setEdit=props.setEdit,updateContact=props.updateContact;var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var body=/*#__PURE__*/React.createElement(\"div\",{style:modalStyle,id:\"modal\",className:classes.paper},/*#__PURE__*/React.createElement(\"form\",{className:classes.root,id:\"modal-items\",noValidate:true,autoComplete:\"off\"},/*#__PURE__*/React.createElement(Input,{placeholder:\"Name\",inputProps:{'aria-label':'description'},value:name,onChange:function onChange(event){setName(event.target.value);}}),/*#__PURE__*/React.createElement(Input,{placeholder:\"Address\",inputProps:{'aria-label':'description'},value:address,onChange:function onChange(event){setAddress(event.target.value);}}),/*#__PURE__*/React.createElement(MaskedInput,{mask:['(',/[1-9]/,/\\d/,/\\d/,')',' ',/\\d/,/\\d/,/\\d/,'-',/\\d/,/\\d/,/\\d/,/\\d/],placeholder:\"Phone Number\",className:\"phonenumber\",inputProps:{'aria-label':'description'},value:phoneNumber,onChange:function onChange(event){setPhoneNumber(event.target.value);}}),/*#__PURE__*/React.createElement(Input,{placeholder:\"Email\",inputProps:{'aria-label':'description'},value:email,onChange:function onChange(event){setEmail(event.target.value);}}),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},\"Contact Type\"),/*#__PURE__*/React.createElement(RadioGroup,{row:true},/*#__PURE__*/React.createElement(FormControlLabel,{value:\"Work\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Work\",onClick:function onClick(event){setContactType(\"work\");}}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"Personal\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Personal\",onClick:function onClick(event){setContactType(\"personal\");}}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"Other\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Other\",onClick:function onClick(event){setContactType(\"other\");}}))),/*#__PURE__*/React.createElement(\"button\",{onClick:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var updatedContact;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();updatedContact={name:name,address:address,phoneNumber:phoneNumber,email:email,contactType:contactType};if(edit===null){fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\",\"POST\",updatedContact).then(function(data){data.contact.comments=[];var newContact=data.contact;console.log(newContact);addNewContact(newContact);}).then(handleClose(),setName(''),setAddress(''),setPhoneNumber(''),setEmail(''),setContactType('')).catch(console.error);}else{fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts/\".concat(edit),\"PATCH\",updatedContact).then(updateContact(updatedContact)).then(handleClose(),setName(''),setAddress(''),setPhoneNumber(''),setEmail(''),setContactType('')).catch(console.error);}setEdit(null);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()},\"Submit\")));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddIcon,{onClick:handleOpen,fontSize:\"large\",style:{color:'green'}}),/*#__PURE__*/React.createElement(Modal,{open:open,onClose:handleClose},body));}","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js"],"names":["React","useState","makeStyles","Modal","Input","MaskedInput","fetchAPI","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","AddIcon","getModalStyle","top","left","transform","useStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ContactModal","props","classes","modalStyle","addNewContact","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","edit","setEdit","updateContact","handleOpen","handleClose","body","root","event","target","value","preventDefault","updatedContact","then","data","contact","comments","newContact","console","log","catch","error","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AddIcon from '@material-ui/icons/Add';\nimport './MODAL.css';\n\n\n\nfunction getModalStyle() {\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ContactModal(props) {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  \n  const {addNewContact, \n        open, \n        setOpen,\n        name,\n        setName,\n        address,\n        setAddress,\n        phoneNumber,\n        setPhoneNumber,\n        email,\n        setEmail,\n        contactType,\n        setContactType,\n        edit,\n        setEdit,\n        updateContact} = props;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} id=\"modal\" className={classes.paper}>\n        <form className={classes.root} id=\"modal-items\" noValidate autoComplete=\"off\">\n            <Input \n                placeholder=\"Name\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={name}\n                onChange={(event) => {\n                    setName(event.target.value)\n                }}/>\n            <Input \n                placeholder=\"Address\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={address}\n                onChange={(event) => {\n                    setAddress(event.target.value)\n                }}/>\n            <MaskedInput\n                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                placeholder=\"Phone Number\"\n                className=\"phonenumber\"\n                inputProps={{ 'aria-label': 'description' }} \n                value={phoneNumber}\n                onChange={(event) => {\n                    setPhoneNumber(event.target.value)\n                }}/>           \n            <Input \n                placeholder=\"Email\"  \n                inputProps={{ 'aria-label': 'description' }} \n                value={email}\n                onChange={(event) => {\n                    setEmail(event.target.value)\n                }}/>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Contact Type</FormLabel>\n                <RadioGroup row >\n                    <FormControlLabel value=\"Work\" control={<Radio />} label=\"Work\" \n                    onClick={(event) => {\n                        setContactType(\"work\")\n                        \n                    }}/>\n                    <FormControlLabel value=\"Personal\" control={<Radio />} label=\"Personal\" \n                    onClick={(event) => {\n                        setContactType(\"personal\")\n                        \n                    }}/>\n                    <FormControlLabel value=\"Other\" control={<Radio />} label=\"Other\" \n                    onClick={(event) => {\n                        setContactType(\"other\")\n                        \n                    }}/>\n                </RadioGroup>\n            </FormControl>\n            \n            <button \n                onClick={async (event) => {\n                    event.preventDefault();\n                    const updatedContact = {\n                        name: name,\n                        address: address,\n                        phoneNumber: phoneNumber,\n                        email: email,\n                        contactType: contactType\n                    }\n                    if (edit === null)  \n                        {fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", updatedContact)\n                        .then(function(data) {\n                            data.contact.comments = [];\n\n                            const newContact = data.contact;\n                            console.log(newContact)\n                            addNewContact(newContact)\n                            })\n                        .then(\n                            handleClose(),\n                            setName(''), \n                            setAddress(''),\n                            setPhoneNumber(''),\n                            setEmail(''),\n                            setContactType(''))\n                        .catch(console.error)}\n                    else\n                     { \n                            fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${edit}`, \"PATCH\", updatedContact)\n                            .then(updateContact(updatedContact))\n                            .then(\n                                handleClose(),\n                                setName(''),\n                                setAddress(''),\n                                setPhoneNumber(''),\n                                setEmail(''),\n                                setContactType('')\n                            ).catch(console.error)\n                         \n                        }\n                        \n                        setEdit(null)    \n                    }\n                }\n\n                \n            >Submit</button>\n        </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <AddIcon onClick={handleOpen} fontSize=\"large\" style={{ color: 'green' }}>\n      </AddIcon>\n      <Modal\n        open={open}\n        onClose={handleClose}\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}