{"ast":null,"code":"var _jsxFileName = \"/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AddIcon from '@material-ui/icons/Add';\nimport './MODAL.css';\nimport Form from './FORM';\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function ContactModal(props) {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const {\n    addNewContact,\n    open,\n    setOpen,\n    name,\n    setName,\n    address,\n    setAddress,\n    phoneNumber,\n    setPhoneNumber,\n    email,\n    setEmail,\n    contactType,\n    setContactType,\n    edit,\n    setEdit,\n    updateContact\n  } = props;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    id: \"modal\",\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    id: \"modal-items\",\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Name\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: name,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Address\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: address,\n    onChange: event => {\n      setAddress(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholder: \"Phone Number\",\n    className: \"phonenumber\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: phoneNumber,\n    onChange: event => {\n      setPhoneNumber(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Work\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 61\n      }\n    }),\n    label: \"Work\",\n    onClick: event => {\n      setContactType(\"work\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Personal\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 65\n      }\n    }),\n    label: \"Personal\",\n    onClick: event => {\n      setContactType(\"personal\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Other\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 62\n      }\n    }),\n    label: \"Other\",\n    onClick: event => {\n      setContactType(\"other\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async event => {\n      event.preventDefault();\n      const updatedContact = {\n        name: name,\n        address: address,\n        phoneNumber: phoneNumber,\n        email: email,\n        contactType: contactType\n      };\n\n      if (edit === null) {\n        fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", updatedContact).then(function (data) {\n          data.contact.comments = [];\n          const newContact = data.contact;\n          console.log(newContact);\n          addNewContact(newContact);\n        }).then(handleClose(), setName(''), setAddress(''), setPhoneNumber(''), setEmail(''), setContactType('')).catch(console.error);\n      } else {\n        fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${edit}`, \"PATCH\", updatedContact).then(updateContact(updatedContact)).then(handleClose(), setName(''), setAddress(''), setPhoneNumber(''), setEmail(''), setContactType('')).catch(console.error);\n      }\n\n      setEdit(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    onClick: handleOpen,\n    fontSize: \"large\",\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js"],"names":["React","useState","makeStyles","Modal","Input","MaskedInput","fetchAPI","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","AddIcon","Form","getModalStyle","top","left","transform","useStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ContactModal","props","classes","modalStyle","addNewContact","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","edit","setEdit","updateContact","handleOpen","handleClose","body","root","event","target","value","preventDefault","updatedContact","then","data","contact","comments","newContact","console","log","catch","error","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AddIcon from '@material-ui/icons/Add';\nimport './MODAL.css';\nimport Form from './FORM'\n\n\n\nfunction getModalStyle() {\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ContactModal(props) {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  \n  const {addNewContact, \n        open, \n        setOpen,\n        name,\n        setName,\n        address,\n        setAddress,\n        phoneNumber,\n        setPhoneNumber,\n        email,\n        setEmail,\n        contactType,\n        setContactType,\n        edit,\n        setEdit,\n        updateContact} = props;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} id=\"modal\" className={classes.paper}>\n        <form className={classes.root} id=\"modal-items\" noValidate autoComplete=\"off\">\n            <Input \n                placeholder=\"Name\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={name}\n                onChange={(event) => {\n                    setName(event.target.value)\n                }}/>\n            <Input \n                placeholder=\"Address\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={address}\n                onChange={(event) => {\n                    setAddress(event.target.value)\n                }}/>\n            <MaskedInput\n                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                placeholder=\"Phone Number\"\n                className=\"phonenumber\"\n                inputProps={{ 'aria-label': 'description' }} \n                value={phoneNumber}\n                onChange={(event) => {\n                    setPhoneNumber(event.target.value)\n                }}/>           \n            <Input \n                placeholder=\"Email\"  \n                inputProps={{ 'aria-label': 'description' }} \n                value={email}\n                onChange={(event) => {\n                    setEmail(event.target.value)\n                }}/>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Contact Type</FormLabel>\n                <RadioGroup row >\n                    <FormControlLabel value=\"Work\" control={<Radio />} label=\"Work\" \n                    onClick={(event) => {\n                        setContactType(\"work\")\n                        \n                    }}/>\n                    <FormControlLabel value=\"Personal\" control={<Radio />} label=\"Personal\" \n                    onClick={(event) => {\n                        setContactType(\"personal\")\n                        \n                    }}/>\n                    <FormControlLabel value=\"Other\" control={<Radio />} label=\"Other\" \n                    onClick={(event) => {\n                        setContactType(\"other\")\n                        \n                    }}/>\n                </RadioGroup>\n            </FormControl>\n            \n            <button \n                onClick={async (event) => {\n                    event.preventDefault();\n                    const updatedContact = {\n                        name: name,\n                        address: address,\n                        phoneNumber: phoneNumber,\n                        email: email,\n                        contactType: contactType\n                    }\n                    if (edit === null)  \n                        {fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", updatedContact)\n                        .then(function(data) {\n                            data.contact.comments = [];\n\n                            const newContact = data.contact;\n                            console.log(newContact)\n                            addNewContact(newContact)\n                            })\n                        .then(\n                            handleClose(),\n                            setName(''), \n                            setAddress(''),\n                            setPhoneNumber(''),\n                            setEmail(''),\n                            setContactType(''))\n                        .catch(console.error)}\n                    else\n                     { \n                            fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${edit}`, \"PATCH\", updatedContact)\n                            .then(updateContact(updatedContact))\n                            .then(\n                                handleClose(),\n                                setName(''),\n                                setAddress(''),\n                                setPhoneNumber(''),\n                                setEmail(''),\n                                setContactType('')\n                            ).catch(console.error)\n                         \n                        }\n                        \n                        setEdit(null)    \n                    }\n                }\n\n                \n            >Submit</button>\n        </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <AddIcon onClick={handleOpen} fontSize=\"large\" style={{ color: 'green' }}>\n      </AddIcon>\n      <Modal\n        open={open}\n        onClose={handleClose}\n      >\n        <Form />\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}