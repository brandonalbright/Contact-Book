{"ast":null,"code":"var _jsxFileName = \"/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: '80vw',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function ContactModal() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [contactType, setContactType] = useState('');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Name\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: name,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Address\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: address,\n    onChange: event => {\n      setAddress(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholder: \"Phone Number\",\n    className: \"phonenumber\",\n    value: phoneNumber,\n    onChange: event => {\n      setPhoneNumber(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Work/Personal/Other\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: contactType,\n    onChange: event => {\n      setContactType(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async event => {\n      fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", {\n        name: name,\n        address: address,\n        phoneNumber: phoneNumber,\n        email: email,\n        contactType: contactType\n      }).then(console.log).catch(console.error);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js"],"names":["React","useState","makeStyles","Modal","Input","MaskedInput","fetchAPI","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ContactModal","classes","modalStyle","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","handleOpen","handleClose","body","root","event","target","value","then","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: '80vw',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ContactModal() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [contactType, setContactType] = useState('');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Input \n                placeholder=\"Name\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={name}\n                onChange={(event) => {\n                    setName(event.target.value)\n                }}/>\n            <Input \n                placeholder=\"Address\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={address}\n                onChange={(event) => {\n                    setAddress(event.target.value)\n                }}/>\n            <MaskedInput\n                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                placeholder=\"Phone Number\"\n                className=\"phonenumber\"\n                value={phoneNumber}\n                onChange={(event) => {\n                    setPhoneNumber(event.target.value)\n                }}/>           \n            <Input \n                placeholder=\"Email\"  \n                inputProps={{ 'aria-label': 'description' }} \n                value={email}\n                onChange={(event) => {\n                    setEmail(event.target.value)\n                }}/>\n            <Input \n                placeholder=\"Work/Personal/Other\"  \n                inputProps={{ 'aria-label': 'description' }} \n                value={contactType}\n                onChange={(event) => {\n                    setContactType(event.target.value)\n                }}/>\n            <button \n                onClick={async (event) => {\n                    fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", {\n                    name: name,\n                    address: address,\n                    phoneNumber: phoneNumber,\n                    email: email,\n                    contactType: contactType,\n                    })\n                    .then(console.log)\n                    .catch(console.error);\n                }}\n            >Submit</button>\n        </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}