{"ast":null,"code":"var _jsxFileName = \"/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: '80vw',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function ContactModal() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [contactType, setContactType] = useState('');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Name\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: name,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Address\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: address,\n    onChange: event => {\n      setAddress(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholder: \"Phone Number\",\n    className: \"phonenumber\",\n    value: phoneNumber,\n    onChange: event => {\n      setPhoneNumber(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    inputProps: {\n      'aria-label': 'description'\n    },\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Work\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 61\n      }\n    }),\n    label: \"Work\",\n    onClick: event => {\n      setContactType(\"work\");\n      console.log(contactType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Personal\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 65\n      }\n    }),\n    label: \"Personal\",\n    onClick: event => {\n      setContactType(\"personal\");\n      console.log(contactType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Other\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 62\n      }\n    }),\n    label: \"Other\",\n    onClick: event => {\n      setContactType(\"other\");\n      console.log(contactType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async event => {\n      event.preventDefault();\n      fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", {\n        name: name,\n        address: address,\n        phoneNumber: phoneNumber,\n        email: email,\n        contactType: contactType\n      }).then(console.log).then(handleClose(), setName(''), setAddress(''), setPhoneNumber(''), setEmail(''), setContactType('')).catch(console.error);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/components/MODAL.js"],"names":["React","useState","makeStyles","Modal","Input","MaskedInput","fetchAPI","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ContactModal","classes","modalStyle","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","handleOpen","handleClose","body","root","event","target","value","console","log","preventDefault","then","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nfunction getModalStyle() {\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: '80vw',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ContactModal() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [contactType, setContactType] = useState('');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Input \n                placeholder=\"Name\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={name}\n                onChange={(event) => {\n                    setName(event.target.value)\n                }}/>\n            <Input \n                placeholder=\"Address\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={address}\n                onChange={(event) => {\n                    setAddress(event.target.value)\n                }}/>\n            <MaskedInput\n                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                placeholder=\"Phone Number\"\n                className=\"phonenumber\"\n                value={phoneNumber}\n                onChange={(event) => {\n                    setPhoneNumber(event.target.value)\n                }}/>           \n            <Input \n                placeholder=\"Email\"  \n                inputProps={{ 'aria-label': 'description' }} \n                value={email}\n                onChange={(event) => {\n                    setEmail(event.target.value)\n                }}/>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Contact Type</FormLabel>\n                <RadioGroup row >\n                    <FormControlLabel value=\"Work\" control={<Radio />} label=\"Work\" \n                    onClick={(event) => {\n                        setContactType(\"work\")\n                        console.log(contactType)\n                    }}/>\n                    <FormControlLabel value=\"Personal\" control={<Radio />} label=\"Personal\" \n                    onClick={(event) => {\n                        setContactType(\"personal\")\n                        console.log(contactType)\n                    }}/>\n                    <FormControlLabel value=\"Other\" control={<Radio />} label=\"Other\" \n                    onClick={(event) => {\n                        setContactType(\"other\")\n                        console.log(contactType)\n                    }}/>\n                </RadioGroup>\n            </FormControl>\n            \n            <button \n                onClick={async (event) => {\n                    event.preventDefault();\n                    fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", {\n                    name: name,\n                    address: address,\n                    phoneNumber: phoneNumber,\n                    email: email,\n                    contactType: contactType,\n                    })\n                    .then(console.log)\n                    .then(\n                        handleClose(),\n                        setName(''), \n                        setAddress(''),\n                        setPhoneNumber(''),\n                        setEmail(''),\n                        setContactType(''))\n                    .catch(console.error);\n\n                }}\n            >Submit</button>\n        </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}