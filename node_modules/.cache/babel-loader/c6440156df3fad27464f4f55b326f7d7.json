{"ast":null,"code":"import _toConsumableArray from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/brandonalbright/Desktop/Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{TextField}from'@material-ui/core';import React,{useState}from'react';import fetchAPI from'../api/index';import'./COMMENTS.css';function Comments(props){var contact=props.contact;var _useState=useState(contact.comments),_useState2=_slicedToArray(_useState,2),commentList=_useState2[0],setCommentList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newComment=_useState4[0],setNewComment=_useState4[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"comments\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Comments: \"),\" \",commentList.length===0?'None':null),commentList===0?null:commentList.map(function(comment,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"single-comment\"},/*#__PURE__*/React.createElement(\"p\",null,\" - \",comment.content),/*#__PURE__*/React.createElement(\"button\",{onClick:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();fetchAPI(\"https://univ-contact-book.herokuapp.com/api/comments/\".concat(comment.id),\"DELETE\").then(function(){var newList=commentList.filter(function(otherComments){return otherComments.id!==comment.id;});setCommentList(newList);}).catch(console.error);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()},\"Delete Comment\"));}),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{className:\"comment-form\",type:TextField,placeholder:\"Type New Comment\",value:newComment,onChange:function onChange(event){setNewComment(event.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{className:\"comment-submit\",onClick:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts/\".concat(contact.id,\"/comments\"),\"POST\",{content:newComment}).then(function(data){setCommentList([].concat(_toConsumableArray(commentList),[data.comment]));}).then(setNewComment('')).catch(console.error);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}()},\"Add Comment\")));}export default Comments;","map":{"version":3,"sources":["/Users/brandonalbright/Desktop/Contact-Book/src/components/COMMENTS.js"],"names":["TextField","React","useState","fetchAPI","Comments","props","contact","comments","commentList","setCommentList","newComment","setNewComment","length","map","comment","index","content","event","preventDefault","id","then","newList","filter","otherComments","catch","console","error","target","value","data"],"mappings":"6oBAAA,OAASA,SAAT,KAA0B,mBAA1B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,gBAAP,CAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,IACdC,CAAAA,OADc,CACHD,KADG,CACdC,OADc,eAEgBJ,QAAQ,CAACI,OAAO,CAACC,QAAT,CAFxB,wCAEdC,WAFc,eAEDC,cAFC,8BAGcP,QAAQ,CAAC,EAAD,CAHtB,yCAGdQ,UAHc,eAGFC,aAHE,eAMrB,mBACI,2BAAK,SAAS,CAAC,UAAf,eACI,0CAAG,+CAAH,KAAgCH,WAAW,CAACI,MAAZ,GAAuB,CAAvB,CAA0B,MAA1B,CAAmC,IAAnE,CADJ,CAEKJ,WAAW,GAAK,CAAhB,CAAmB,IAAnB,CAA2BA,WAAD,CAAcK,GAAd,CAAkB,SAACC,OAAD,CAAUC,KAAV,CAAoB,CAC7D,mBAAQ,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,gBAA3B,eACJ,mCAAOD,OAAO,CAACE,OAAf,CADI,cAEJ,8BACI,OAAO,0FAAE,iBAAOC,KAAP,kHACLA,KAAK,CAACC,cAAN,GACAf,QAAQ,gEAAyDW,OAAO,CAACK,EAAjE,EAAuE,QAAvE,CAAR,CACCC,IADD,CACM,UAAW,CACb,GAAMC,CAAAA,OAAO,CAAGb,WAAW,CAACc,MAAZ,CAAmB,SAAAC,aAAa,QAAIA,CAAAA,aAAa,CAACJ,EAAd,GAAqBL,OAAO,CAACK,EAAjC,EAAhC,CAAhB,CACAV,cAAc,CAACY,OAAD,CAAd,CACH,CAJD,EAKCG,KALD,CAKOC,OAAO,CAACC,KALf,EAFK,sDAAF,8DADX,mBAFI,CAAR,CAeH,CAhB0B,CAF/B,cAmBI,6CAEI,6BACI,SAAS,CAAC,cADd,CAEI,IAAI,CAAE1B,SAFV,CAGI,WAAW,CAAC,kBAHhB,CAII,KAAK,CAAEU,UAJX,CAKI,QAAQ,CAAG,kBAACO,KAAD,CAAW,CAClBN,aAAa,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAb,CAAkC,CAN1C,EAFJ,cAUI,8BACI,SAAS,CAAC,gBADd,CAEI,OAAO,2FAAE,kBAAOX,KAAP,sHACLA,KAAK,CAACC,cAAN,GACAf,QAAQ,gEAAyDG,OAAO,CAACa,EAAjE,cAAgF,MAAhF,CAAwF,CAChGH,OAAO,CAAEN,UADuF,CAAxF,CAAR,CAGCU,IAHD,CAGM,SAAUS,IAAV,CAAgB,CAElBpB,cAAc,8BAAKD,WAAL,GAAkBqB,IAAI,CAACf,OAAvB,GAAd,CACH,CAND,EAOCM,IAPD,CAQIT,aAAa,CAAC,EAAD,CARjB,EAUCa,KAVD,CAUOC,OAAO,CAACC,KAVf,EAFK,wDAAF,gEAFX,gBAVJ,CAnBJ,CADJ,CAmDH,CAED,cAAetB,CAAAA,QAAf","sourcesContent":["import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport fetchAPI from '../api/index';\nimport './COMMENTS.css';\n\nfunction Comments(props) {\n    const {contact} = props\n    const [commentList, setCommentList] =useState(contact.comments)\n    const [newComment, setNewComment]= useState('')\n\n\n    return (\n        <div className=\"comments\">\n            <p><strong>Comments: </strong> {commentList.length === 0? 'None' : null }</p>\n            {commentList === 0? null : (commentList).map((comment, index) => {\n                return (<div key={index} className=\"single-comment\">\n                    <p> - {comment.content}</p>\n                    <button\n                        onClick={async (event) => {\n                            event.preventDefault()\n                            fetchAPI(`https://univ-contact-book.herokuapp.com/api/comments/${comment.id}`, \"DELETE\")\n                            .then(function (){\n                                const newList = commentList.filter(otherComments => otherComments.id !== comment.id);\n                                setCommentList(newList)\n                            })\n                            .catch(console.error);\n                        }}\n                        >Delete Comment</button>\n                </div>\n                 )\n            })}\n            <form>\n\n                <input \n                    className=\"comment-form\"\n                    type={TextField} \n                    placeholder=\"Type New Comment\" \n                    value={newComment} \n                    onChange= {(event) => {\n                        setNewComment(event.target.value)}}>\n                </input>\n                <button\n                    className=\"comment-submit\"\n                    onClick={async (event) => {\n                        event.preventDefault()\n                        fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${contact.id}/comments`, \"POST\", {\n                        content: newComment,\n                        })\n                        .then(function (data) {\n\n                            setCommentList([...commentList, data.comment]);\n                        })\n                        .then(\n                            setNewComment('')\n                        )\n                        .catch(console.error);\n                    }}\n                >Add Comment</button>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}