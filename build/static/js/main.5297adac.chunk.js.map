{"version":3,"sources":["api/index.js","components/MODAL.js","components/COMMENTS.js","components/CONTACTS.js","index.js"],"names":["url","a","method","sendData","fetchOptions","headers","body","JSON","stringify","fetch","response","json","data","fetchAPI","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ContactModal","props","classes","useState","modalStyle","addNewContact","open","setOpen","name","setName","address","setAddress","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","edit","setEdit","updateContact","handleClose","style","id","className","root","noValidate","autoComplete","Input","placeholder","inputProps","value","onChange","event","target","mask","FormControl","component","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","label","onClick","preventDefault","updatedContact","then","contact","comments","newContact","console","log","catch","error","fontSize","color","Modal","onClose","Comments","commentList","setCommentList","newComment","setNewComment","length","map","comment","index","key","content","newList","filter","otherComments","type","TextField","Contacts","contactList","setContactList","expanded","setExpanded","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","person","App","useEffect","sortedArray","contacts","sort","b","findIndex","contactListCopy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5297adac.chunk.js","sourcesContent":["async function fetchAPI(url, method=\"GET\", sendData=null) {\n    const fetchOptions = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImJyYW5kb24iLCJpYXQiOjE2MDU1NzQwOTIsImV4cCI6MTYwNjE3ODg5Mn0.HJQ-TnkS1pKhJ-h9oFGShA20oN322SouFjJHvCfY7PI'\n      }\n    };\n  \n    if (sendData) {\n      fetchOptions.body = JSON.stringify(sendData);\n    }\n  \n    const response = await fetch(url, fetchOptions);\n    const data = await response.json();\n  \n    return data;\n  }\n\nexport default fetchAPI","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport fetchAPI from '../api/index'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AddIcon from '@material-ui/icons/Add';\nimport './MODAL.css';\n\n\n\nfunction getModalStyle() {\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ContactModal(props) {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  \n  const {addNewContact, \n        open, \n        setOpen,\n        name,\n        setName,\n        address,\n        setAddress,\n        phoneNumber,\n        setPhoneNumber,\n        email,\n        setEmail,\n        contactType,\n        setContactType,\n        edit,\n        setEdit,\n        updateContact} = props;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} id=\"modal\" className={classes.paper}>\n        <form className={classes.root} id=\"modal-items\" noValidate autoComplete=\"off\">\n            <Input \n                placeholder=\"Name\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={name}\n                onChange={(event) => {\n                    setName(event.target.value)\n                }}/>\n            <Input \n                placeholder=\"Address\" \n                inputProps={{ 'aria-label': 'description' }} \n                value={address}\n                onChange={(event) => {\n                    setAddress(event.target.value)\n                }}/>\n            <MaskedInput\n                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                placeholder=\"Phone Number\"\n                className=\"phonenumber\"\n                inputProps={{ 'aria-label': 'description' }} \n                value={phoneNumber}\n                onChange={(event) => {\n                    setPhoneNumber(event.target.value)\n                }}/>           \n            <Input \n                placeholder=\"Email\"  \n                inputProps={{ 'aria-label': 'description' }} \n                value={email}\n                onChange={(event) => {\n                    setEmail(event.target.value)\n                }}/>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Contact Type</FormLabel>\n                <RadioGroup row >\n                    <FormControlLabel value=\"Work\" control={<Radio />} label=\"Work\" \n                    onClick={(event) => {\n                        setContactType(\"work\")\n                        \n                    }}/>\n                    <FormControlLabel value=\"Personal\" control={<Radio />} label=\"Personal\" \n                    onClick={(event) => {\n                        setContactType(\"personal\")\n                        \n                    }}/>\n                    <FormControlLabel value=\"Other\" control={<Radio />} label=\"Other\" \n                    onClick={(event) => {\n                        setContactType(\"other\")\n                        \n                    }}/>\n                </RadioGroup>\n            </FormControl>\n            \n            <button \n                onClick={async (event) => {\n                    event.preventDefault();\n                    const updatedContact = {\n                        name: name,\n                        address: address,\n                        phoneNumber: phoneNumber,\n                        email: email,\n                        contactType: contactType\n                    }\n                    if (edit === null)  \n                        {fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\", \"POST\", updatedContact)\n                        .then(function(data) {\n                            data.contact.comments = [];\n\n                            const newContact = data.contact;\n                            console.log(newContact)\n                            addNewContact(newContact)\n                            })\n                        .then(\n                            handleClose(),\n                            setName(''), \n                            setAddress(''),\n                            setPhoneNumber(''),\n                            setEmail(''),\n                            setContactType(''))\n                        .catch(console.error)}\n                    else\n                     { \n                            fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${edit}`, \"PATCH\", updatedContact)\n                            .then(updateContact(updatedContact))\n                            .then(\n                                handleClose(),\n                                setName(''),\n                                setAddress(''),\n                                setPhoneNumber(''),\n                                setEmail(''),\n                                setContactType('')\n                            ).catch(console.error)\n                         \n                        }\n                        \n                        setEdit(null)    \n                    }\n                }\n\n                \n            >Submit</button>\n        </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <AddIcon onClick={handleOpen} fontSize=\"large\" style={{ color: 'green' }}>\n      </AddIcon>\n      <Modal\n        open={open}\n        onClose={handleClose}\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}","import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport fetchAPI from '../api/index';\nimport './COMMENTS.css';\n\nfunction Comments(props) {\n    const {contact} = props\n    const [commentList, setCommentList] =useState(contact.comments)\n    const [newComment, setNewComment]= useState('')\n\n\n    return (\n        <div className=\"comments\">\n            <p><strong>Comments: </strong> {commentList.length === 0? 'None' : null }</p>\n            {commentList === 0? null : (commentList).map((comment, index) => {\n                return (<div key={index} className=\"single-comment\">\n                    <p> - {comment.content}</p>\n                    <button\n                        onClick={async (event) => {\n                            event.preventDefault()\n                            fetchAPI(`https://univ-contact-book.herokuapp.com/api/comments/${comment.id}`, \"DELETE\")\n                            .then(function (){\n                                const newList = commentList.filter(otherComments => otherComments.id !== comment.id);\n                                setCommentList(newList)\n                            })\n                            .catch(console.error);\n                        }}\n                        >Delete Comment</button>\n                </div>\n                 )\n            })}\n            <form>\n\n                <input \n                    className=\"comment-form\"\n                    type={TextField} \n                    placeholder=\"Type New Comment\" \n                    value={newComment} \n                    onChange= {(event) => {\n                        setNewComment(event.target.value)}}>\n                </input>\n                <button\n                    className=\"comment-submit\"\n                    onClick={async (event) => {\n                        event.preventDefault()\n                        fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${contact.id}/comments`, \"POST\", {\n                        content: newComment,\n                        })\n                        .then(function (data) {\n\n                            setCommentList([...commentList, data.comment]);\n                        })\n                        .then(\n                            setNewComment('')\n                        )\n                        .catch(console.error);\n                    }}\n                >Add Comment</button>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Comments","import React, {useState} from  \"react\";\nimport \"./CONTACTS.css\"\nimport { Accordion, AccordionDetails, AccordionSummary, Typography  } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport fetchAPI from '../api/index'\nimport Comments from './COMMENTS'\n\n\nfunction Contacts(props) {\n    const {contactList, \n            setContactList, \n            setOpen, \n            setName, \n            setAddress,\n            setPhoneNumber,\n            setEmail,\n            setContactType,\n            setEdit} = props\n    const [expanded, setExpanded] = useState('false');\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    \n\n    return (contactList.map((contact, index) => {\n        return <Accordion key={index} expanded={expanded === index} onChange={handleChange(index)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          expanded={expanded}\n        >\n          <Typography className=\"contact-name\"><strong>{contact.name}</strong></Typography>\n        </AccordionSummary>\n        <AccordionDetails className=\"details\">\n          <div className=\"contact-details\">\n\n            <Typography>\n              <strong>ADDRESS: </strong>{contact.address}<br></br>\n              <strong>PHONE NUMBER: </strong>{contact.phoneNumber}<br></br>\n              <strong>EMAIL: </strong>{contact.email}<br></br>\n              <strong>CONTACT TYPE: </strong>{contact.contactType}<br></br>\n            </Typography>\n            <div className=\"icons\">\n              <DeleteIcon \n                  id=\"delete\" \n                  fontSize=\"large\"\n                  onClick={async (event) => {\n                      event.preventDefault();\n                      fetchAPI(`https://univ-contact-book.herokuapp.com/api/contacts/${contact.id}`, \"DELETE\")\n                      .then(\n                          function() {\n                            const newList = contactList.filter(person => person.id !== contact.id);\n                            setContactList(newList)\n                            setExpanded(false)\n                          })\n                      .catch(console.error);\n                  }}\n                  ></DeleteIcon>\n              <EditIcon  \n                  id=\"edit\" \n                  fontSize=\"large\"\n                  onClick={(event) => {\n                      event.preventDefault();\n                      setEdit(contact.id)\n                      setOpen(true)\n                      setName(contact.name)\n                      setAddress(contact.address)\n                      setPhoneNumber(contact.phoneNumber)\n                      setEmail(contact.email)\n                      setContactType(contact.contactType)\n                  }\n                  }\n                  ></EditIcon>\n            </div>\n          </div>\n          <Comments \n            contact={contact}/>\n        </AccordionDetails>\n        </Accordion>\n        \n    })\n    \n    )\n    }\n    \n        \n\n\nexport default Contacts\n","import React, { useEffect, useState } from  \"react\";\nimport ReactDOM from \"react-dom\";\nimport ContactModal from \"./components/MODAL\"\nimport Contacts from \"./components/CONTACTS\"\nimport fetchAPI from \"./api/index\"\nimport \"./index.css\"\n\n\n\n\nfunction App() {\n    const [contactList, setContactList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactType, setContactType] = useState('');\n    const [edit, setEdit]= useState(null)\n    \n    \n    useEffect(() => {\n        fetchAPI(\"https://univ-contact-book.herokuapp.com/api/contacts\")\n        .then(function (data) {\n            const sortedArray = data.contacts.sort(function (a, b) {\n                if (a.name < b.name) return -1;\n                else if (a.name > b.name) return 1;\n                return 0;\n              });\n            setContactList(sortedArray);\n            \n        })\n        .catch(function (error) {\n            console.error('error fetching contacts', error);\n        })\n    }, [])\n    \n\n\n\n\n    function addNewContact(newContact) {\n        return setContactList([...contactList, newContact ])\n      }\n\n    function updateContact(updatedContact) {\n        let index = contactList.findIndex((contact) => {\n            return contact.id === edit\n        })\n        \n        if (index > -1) {\n            let contactListCopy = [...contactList]\n            contactListCopy[index] = updatedContact\n            setContactList(contactListCopy)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"title\">\n                <h1>My Contacts</h1>\n                <ContactModal \n                    addNewContact={addNewContact}\n                    open={open}\n                    setOpen={setOpen}\n                    name={name}\n                    address={address}\n                    phoneNumber={phoneNumber}\n                    email={email}\n                    contactType={contactType}\n                    setName={setName}\n                    setAddress={setAddress}\n                    setPhoneNumber={setPhoneNumber}\n                    setEmail={setEmail}\n                    setContactType={setContactType}\n                    edit={edit}\n                    setEdit={setEdit}\n                    updateContact={updateContact}\n                    />\n            </div>\n            <Contacts \n                contactList={contactList}\n                setContactList={setContactList}\n                setOpen={setOpen}\n                setName={setName}\n                setAddress={setAddress}\n                setPhoneNumber={setPhoneNumber}\n                setEmail={setEmail}\n                setContactType={setContactType}\n                setEdit={setEdit}\n                />\n        </>\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(`app`)\n);\n"],"sourceRoot":""}